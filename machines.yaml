heat_template_version: 2015-10-15

description: none 

parameters:

  public_network:
    type: string
    description: name of public network used for creation of floating_ip and router
    default: float_intranet

  network:
    type: string
    description: define network for app-servers builded
    default: internal_network

  subnet_lb:
    type: string
    description: define the subnet for load balancer
    default: internal-subnet


  key_name:
    type: string
    description: Which public keys will be used for cloud-user login
    constraints:
      - custom_constraint: nova.keypair
  
  flavor:
    type: string
    description: Which flavor will be used for the instances
    default: m1.small
    constraints:
      - custom_constraint: nova.flavor

  image:
    type: string
    description: Which OS version will be used in this build
    constraints:
      - custom_constraint: glance.image

  floating_ip_id:
    type: string
    description: ID of floating IP assigned to nginx lb_method
    default: "to be changed"
   
resources:

    # Nginx server

    asg:
        type: OS::Heat::AutoScalingGroup
        properties:
            resource:
                type: nginx.yaml
                properties:
                    key_name: { get_param: key_name }   
                    image: { get_param: image }
                    flavor: { get_param: flavor }
                    network: { get_param: network }
            min_size: 1
            desired_capacity: 3
            max_size: 5

    scale_up_policy:
        type: OS::Heat::ScalingPolicy
        properties:
            adjustment_type: change_in_capacity
            auto_scaling_group_id: {get_resource: asg}
            cooldown: 60
            scaling_adjustment: 1

    scale_dn_policy:
        type: OS::Heat::ScalingPolicy
        properties:
            adjustment_type: change_in_capacity
            auto_scaling_group_id: {get_resource: asg}
            cooldown: 60
            scaling_adjustment: '-1'

    pool:
        type: OS::Neutron::Pool
        properties:
            protocol: HTTP
            subnet_id: {get_param: subnet_id}
            lb_method: ROUND_ROBIN
            vip:
                protocol_port: 80

    lb:
        type: OS::Neutron::LoadBalancer
        properties:
            protocol_port: 80
            pool_id: {get_resource: pool}
    
    association:
        type: OS::Neutron::FloatingIPAssociation
        properties:
            floatingip_id: { get param: floating_ip_id }
            port_id: { get_resource: pool }

    # Application servers
 
    appserver:
        type: app_server.yaml
        properties:
            key_name: { get_param: key_name }
            image: { get_param: image }
            flavor: { get_param: flavor }
            network: { get_param: network }

    # Database servers

    dbserver:
        type: db_server.yaml
        properties:
            key_name: { get_param: key_name }
            image: { get_param: image }
            flavor: { get_param: flavor }
            network: { get_param: network }


outputs:
  scale_up_url:
    value: {get_attr: [scale_up_policy, alarm_url]}
  scale_dn_url:
    value: {get_attr: [scale_dn_policy, alarm_url]}
